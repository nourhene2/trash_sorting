{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ml_for_de\\\\trash_sorting\\\\Frontend\\\\src\\\\components\\\\UploadPage\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./UploadPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(\"\"); // Stocke le résultat de la classification\n\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setImage(file);\n      setResult(\"\"); // Reset result if a new image is uploaded\n    }\n  };\n  const handleClassifyImage = async () => {\n    if (!image) {\n      alert(\"Please upload an image first!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/predict/\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResult(`Class: ${data.class} (Confidence: ${data.confidence}%)`);\n      } else {\n        setResult(`Error: ${data.error}`);\n      }\n    } catch (error) {\n      setResult(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"upload-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Classify an Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use our AI-powered tool to identify recyclable materials in your waste. Simply upload an image, and we'll guide you on how to sort it correctly!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Step 1: Upload Your Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(image),\n          alt: \"Uploaded Preview\",\n          className: \"preview-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"classify-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Step 2: Classify the Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"classify-button\",\n        onClick: handleClassifyImage,\n        children: \"Classify Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"result-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Classification Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"nt4sedxQDxP7YXP3T50jyxe7Irc=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPage","_s","image","setImage","result","setResult","handleImageUpload","event","file","target","files","handleClassifyImage","alert","formData","FormData","append","response","fetch","method","body","data","json","ok","class","confidence","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","URL","createObjectURL","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/ml_for_de/trash_sorting/Frontend/src/components/UploadPage/UploadPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./UploadPage.css\";\r\n\r\nconst UploadPage = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [result, setResult] = useState(\"\"); // Stocke le résultat de la classification\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setResult(\"\"); // Reset result if a new image is uploaded\r\n    }\r\n  };\r\n\r\n  const handleClassifyImage = async () => {\r\n    if (!image) {\r\n      alert(\"Please upload an image first!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", image);\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/predict/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setResult(`Class: ${data.class} (Confidence: ${data.confidence}%)`);\r\n      } else {\r\n        setResult(`Error: ${data.error}`);\r\n      }\r\n    } catch (error) {\r\n      setResult(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-page\">\r\n      {/* Header Section */}\r\n      <header className=\"upload-header\">\r\n        <h1>Classify an Image</h1>\r\n        <p>\r\n          Use our AI-powered tool to identify recyclable materials in your\r\n          waste. Simply upload an image, and we'll guide you on how to sort\r\n          it correctly!\r\n        </p>\r\n      </header>\r\n\r\n      {/* Upload Section */}\r\n      <section className=\"upload-section\">\r\n        <h2>Step 1: Upload Your Image</h2>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          className=\"upload-input\"\r\n        />\r\n        {image && (\r\n          <div className=\"image-preview\">\r\n            <h2>Preview</h2>\r\n            <img\r\n              src={URL.createObjectURL(image)}\r\n              alt=\"Uploaded Preview\"\r\n              className=\"preview-image\"\r\n            />       \r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      {/* Classify Section */}\r\n      {image && (\r\n        <section className=\"classify-section\">\r\n          <h2>Step 2: Classify the Image</h2>\r\n          <button className=\"classify-button\" onClick={handleClassifyImage}>\r\n            Classify Now\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Result Section */}\r\n      {result && (\r\n        <section className=\"result-section\">\r\n          <h2>Classification Result</h2>\r\n          <p className=\"result\">{result}</p>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}